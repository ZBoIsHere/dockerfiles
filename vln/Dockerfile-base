ARG UBUNTU_VERSION=22.04
ARG NVIDIA_CUDA_VERSION=11.7.1
FROM nvidia/cuda:${NVIDIA_CUDA_VERSION}-devel-ubuntu${UBUNTU_VERSION}
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install --no-install-recommends -y \
    git \
    wget \
    cmake \
    vim \
    iputils-ping \
    curl \
    ninja-build \
    build-essential \
    python3.10-dev \
    python3-pip \
    libgl1-mesa-glx \
    libegl1-mesa \
    libgl1-mesa-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /root/

#[install conda]
RUN wget https://repo.anaconda.com/archive/Anaconda3-2023.07-2-Linux-x86_64.sh --no-check-certificate \
    && /bin/bash Anaconda3-2023.07-2-Linux-x86_64.sh -b

ENV PATH=$PATH:/root/anaconda3/bin
RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN conda update conda \
    # notice that python version and gcc should equal to non conda env
    && conda create -n habitat python=3.10 cmake=3.14 \
    && conda clean --all -y && /root/anaconda3/envs/habitat/bin/pip cache purge
COPY .bashrc-amend /root/
RUN cat /root/.bashrc-amend >> /root/.bashrc
SHELL ["/root/anaconda3/bin/conda", "run", "-n", "habitat", "/bin/bash", "-c"]
RUN git clone --branch v0.3.0 https://github.com/facebookresearch/habitat-sim.git \
    && cd habitat-sim \
    && pip install --no-cache-dir -r requirements.txt \
    && python setup.py install --headless

RUN git clone --branch v0.3.1 https://github.com/facebookresearch/habitat-lab.git \
    && cd habitat-lab \
    && pip install --no-cache-dir -e habitat-lab \
    && pip install --no-cache-dir -e habitat-baselines

RUN pip install --no-cache-dir \ 
    torch==1.12.1+cu113 \
    torchvision==0.13.1+cu113 \
    torchaudio==0.12.1 \
    --extra-index-url https://download.pytorch.org/whl/cu113
RUN git clone https://github.com/facebookresearch/detectron2.git \
    && python -m pip install -e detectron2

# semantic navigation require
RUN pip install --no-cache-dir \
    psutil \
    utm \
    open3d \
    tqdm \
    torch_geometric \
    GPUtil

# trajectory generate require
RUN pip install --no-cache-dir \
    loguru \
    pytest

ENV EXAMPLE_ROOT=/home/zhaishichao/Data/VLN/dependencies/habitat-lab/examples/
ENV PYTHONPATH=$PYTHONPATH:$EXAMPLE_ROOT

#Setup time zone and locale data (necessary for SSL and HTTPS packages)
RUN apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install --no-install-recommends -y \
    tzdata \
    locales \
    keyboard-configuration \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG=en_US.UTF-8

ENV LANG=en_US.UTF-8

#Install common tools
RUN apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install --no-install-recommends -y \
    # common depends
    ca-certificates \
    curl \
    sudo \
    software-properties-common \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
#ROS2 humble
RUN add-apt-repository universe \
    && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
    http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

ARG ROS_DISTRO=humble
#Gem + ROS pacakges
RUN apt-get update && DEBIAN_FRONTEND="noninteractive" apt-get install --no-install-recommends -y \
    ros-humble-desktop \
    && apt-get clean && rm -rf /var/lib/apt/lists/* \
    && echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc

RUN conda install python=3.10.12 gcc=11.4.0 -c conda-forge \
    && conda clean --all -y && /root/anaconda3/envs/habitat/bin/pip cache purge

RUN pip install --no-cache-dir  "numpy<2" && conda clean --all -y \
    && /root/anaconda3/envs/habitat/bin/pip cache purge
